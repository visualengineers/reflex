{
  "scripts": {
    "build": "npm run build --workspaces --if-present",
    "build-complete": "npm run build --workspaces --if-present && npm run lint --workspaces --if-present && npm run test-ci --workspaces --if-present",
    "build:shared-components": "npm run build -w packages/reflex-angular-components",
    "build:shared-types": "npm run build -w packages/reflex-shared-types",
    "build:server": "npm run build -w tools/ReFlex.TrackingServer/ClientApp",
    "build:server:electron-win": "npm run build:electron-win -w tools/ReFlex.TrackingServer/ClientApp",
    "build:server:electron-osx": "npm run build:electron-osx -w tools/ReFlex.TrackingServer/ClientApp",
    "build:server:electron-osx-arm64": "npm run build:electron-osx-arm64 -w tools/ReFlex.TrackingServer/ClientApp",
    "build:server:electron-linux": "npm run build:electron-linux -w tools/ReFlex.TrackingServer/ClientApp",
    "build:server:electron-linux-arm64": "npm run build:electron-linux-arm64 -w tools/ReFlex.TrackingServer/ClientApp",
    "build:emulator": "npm run build -w tools/emulator",
    "build:emulator:electron-win": "npm run build:electron-win -w tools/emulator && npm install",
    "build:emulator:electron-osx": "npm run build:electron-osx -w tools/emulator && npm install",
    "build:emulator:electron-osx-arm64": "npm run build:electron-osx-arm64 -w tools/emulator && npm install",
    "build:emulator:electron-linux": "npm run build:electron-linux -w tools/emulator && npm install",
    "build:emulator:electron-linux-arm64": "npm run build:electron-linux-arm64 -w tools/emulator && npm install",
    "build:example-angular": "npm run build -w examples/basic-angular",
    "build:example-react": "npm run build -w examples/basic-react",
    "build:example-vue": "npm run build -w examples/basic-vue",
    "build:logging": "npm run build -w tools/logging",
    "build:gestenrecorder": "npm run build -w tools/gestenrecorder",
    "start:emulator": "npm start -w tools/emulator",
    "start:gestenrecorder": "npm start -w tools/gestenrecorder",
    "start:example-angular": "npm start -w examples/basic-angular",
    "start:example-react": "npm run dev -w examples/basic-react",
    "start:example-vue": "npm run serve -w examples/basic-vue",
    "start:logging": "npm run start -w tools/logging",
    "start:server": "npm run start -w tools/ReFlex.TrackingServer/ClientApp",
    "lint:emulator": "npm run lint -w tools/emulator",
    "lint:server": "npm run lint -w tools/ReFlex.TrackingServer/ClientApp",
    "test:emulator": "npm run test -w tools/emulator",
    "test:net-with-report": "dotnet coverage collect dotnet test --output test/artifacts/coverage-net/cobertura-coverage.xml --output-format cobertura && dotnet reportgenerator -reports:test/artifacts/coverage-net/cobertura-coverage.xml -targetdir:\"test/artifacts/coverage-net/report\" -reporttypes:Html -assemblyfilters:\"+ReFlex.*;-*.Test\"",
    "test:server": "npm run test-ci -w tools/ReFlex.TrackingServer/ClientApp"
  },
  "workspaces": [
    "packages/reflex-shared-types",
    "packages/reflex-angular-components",
    "tools/ReFlex.TrackingServer/ClientApp",
    "tools/emulator",
    "tools/gestenrecorder",
    "tools/logging",
    "examples/basic-angular",
    "examples/basic-react",
    "examples/basic-vue",
    "examples/shared-components-demo"
  ],
  "dependencies": {
    "@angular/animations": "17.3.2",
    "@angular/common": "17.3.2",
    "@angular/compiler": "17.3.2",
    "@angular/core": "17.3.2",
    "@angular/forms": "17.3.2",
    "@angular/platform-browser": "17.3.2",
    "@angular/platform-browser-dynamic": "17.3.2",
    "@angular/platform-server": "17.3.2",
    "@angular/router": "17.3.2",
    "@angular/ssr": "^17.3.3",
    "angular-plotly.js": "^5.2.2",
    "file-saver": "^2.0.5",
    "plotly.js-dist-min": "^2.33.0",
    "rxjs": "^7.8.1",
    "zone.js": "^0.14.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^17.3.6",
    "@angular/cli": "17.3.6",
    "@angular/compiler-cli": "17.3.2",
    "@angular/language-service": "17.3.7",
    "@gtvmbh/eslint-config": "^1.0.8",
    "@types/file-saver": "^2.0.7",
    "@types/jasmine": "~5.1.0",
    "@types/jasminewd2": "~2.0.8",
    "@types/node": "^18.18.0",
    "@types/plotly.js-dist-min": "^2.3.4",
    "@types/ws": "<8.5.5",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "electron-builder": "^24.13.3",
    "eslint": "^8.45.0",
    "eslint-config-angular": "^0.5.0",
    "eslint-plugin-angular": "^4.1.0",
    "eslint-plugin-jsdoc": "^48.2.6",
    "jasmine-core": "~5.1.2",
    "jasmine-marbles": "^0.9.2",
    "jasmine-spec-reporter": "~7.0.0",
    "karma": "~6.4.1",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "^2.1.0",
    "karma-junit-reporter": "^2.0.1",
    "karma-spec-reporter": "^0.0.36",
    "karma-viewport": "^1.0.9",
    "ng-packagr": "^17.3.0",
    "puppeteer": "^19.11.1",
    "typescript": "^5.4.5"
  }
}
